//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BestFriends.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempData", Namespace="http://schemas.datacontract.org/2004/07/WcfService10")]
    [System.SerializableAttribute()]
    public partial class TempData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Card_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Confirm_PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string First_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Last_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Offer_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Offer_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Offer_ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Offer_TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Offer_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pet_BreedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pet_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Pet_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pet_ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pet_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Pet_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Pet_QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pet_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Province_StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street_AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Zip_CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card_Number {
            get {
                return this.Card_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Card_NumberField, value) != true)) {
                    this.Card_NumberField = value;
                    this.RaisePropertyChanged("Card_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Confirm_Password {
            get {
                return this.Confirm_PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.Confirm_PasswordField, value) != true)) {
                    this.Confirm_PasswordField = value;
                    this.RaisePropertyChanged("Confirm_Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_Name {
            get {
                return this.First_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_NameField, value) != true)) {
                    this.First_NameField = value;
                    this.RaisePropertyChanged("First_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last_Name {
            get {
                return this.Last_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Last_NameField, value) != true)) {
                    this.Last_NameField = value;
                    this.RaisePropertyChanged("Last_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Offer_Description {
            get {
                return this.Offer_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Offer_DescriptionField, value) != true)) {
                    this.Offer_DescriptionField = value;
                    this.RaisePropertyChanged("Offer_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Offer_Id {
            get {
                return this.Offer_IdField;
            }
            set {
                if ((this.Offer_IdField.Equals(value) != true)) {
                    this.Offer_IdField = value;
                    this.RaisePropertyChanged("Offer_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Offer_Image {
            get {
                return this.Offer_ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.Offer_ImageField, value) != true)) {
                    this.Offer_ImageField = value;
                    this.RaisePropertyChanged("Offer_Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Offer_Title {
            get {
                return this.Offer_TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.Offer_TitleField, value) != true)) {
                    this.Offer_TitleField = value;
                    this.RaisePropertyChanged("Offer_Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Offer_Type {
            get {
                return this.Offer_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Offer_TypeField, value) != true)) {
                    this.Offer_TypeField = value;
                    this.RaisePropertyChanged("Offer_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pet_Breed {
            get {
                return this.Pet_BreedField;
            }
            set {
                if ((object.ReferenceEquals(this.Pet_BreedField, value) != true)) {
                    this.Pet_BreedField = value;
                    this.RaisePropertyChanged("Pet_Breed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pet_Description {
            get {
                return this.Pet_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Pet_DescriptionField, value) != true)) {
                    this.Pet_DescriptionField = value;
                    this.RaisePropertyChanged("Pet_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pet_Id {
            get {
                return this.Pet_IdField;
            }
            set {
                if ((this.Pet_IdField.Equals(value) != true)) {
                    this.Pet_IdField = value;
                    this.RaisePropertyChanged("Pet_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pet_Image {
            get {
                return this.Pet_ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.Pet_ImageField, value) != true)) {
                    this.Pet_ImageField = value;
                    this.RaisePropertyChanged("Pet_Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pet_Name {
            get {
                return this.Pet_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Pet_NameField, value) != true)) {
                    this.Pet_NameField = value;
                    this.RaisePropertyChanged("Pet_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Pet_Price {
            get {
                return this.Pet_PriceField;
            }
            set {
                if ((this.Pet_PriceField.Equals(value) != true)) {
                    this.Pet_PriceField = value;
                    this.RaisePropertyChanged("Pet_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pet_Quantity {
            get {
                return this.Pet_QuantityField;
            }
            set {
                if ((this.Pet_QuantityField.Equals(value) != true)) {
                    this.Pet_QuantityField = value;
                    this.RaisePropertyChanged("Pet_Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pet_Type {
            get {
                return this.Pet_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Pet_TypeField, value) != true)) {
                    this.Pet_TypeField = value;
                    this.RaisePropertyChanged("Pet_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone_Number {
            get {
                return this.Phone_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Phone_NumberField, value) != true)) {
                    this.Phone_NumberField = value;
                    this.RaisePropertyChanged("Phone_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province_State {
            get {
                return this.Province_StateField;
            }
            set {
                if ((object.ReferenceEquals(this.Province_StateField, value) != true)) {
                    this.Province_StateField = value;
                    this.RaisePropertyChanged("Province_State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street_Address {
            get {
                return this.Street_AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.Street_AddressField, value) != true)) {
                    this.Street_AddressField = value;
                    this.RaisePropertyChanged("Street_Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip_Code {
            get {
                return this.Zip_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Zip_CodeField, value) != true)) {
                    this.Zip_CodeField = value;
                    this.RaisePropertyChanged("Zip_Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfService10")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Confirm_PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string First_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Last_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Confirm_Password {
            get {
                return this.Confirm_PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.Confirm_PasswordField, value) != true)) {
                    this.Confirm_PasswordField = value;
                    this.RaisePropertyChanged("Confirm_Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_name {
            get {
                return this.First_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_nameField, value) != true)) {
                    this.First_nameField = value;
                    this.RaisePropertyChanged("First_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last_name {
            get {
                return this.Last_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Last_nameField, value) != true)) {
                    this.Last_nameField = value;
                    this.RaisePropertyChanged("Last_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone_number {
            get {
                return this.Phone_numberField;
            }
            set {
                if ((object.ReferenceEquals(this.Phone_numberField, value) != true)) {
                    this.Phone_numberField = value;
                    this.RaisePropertyChanged("Phone_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice1", Namespace="http://schemas.datacontract.org/2004/07/WcfService10")]
    [System.SerializableAttribute()]
    public partial class Invoice1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Card_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string First_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Last_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pet_BreedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Pet_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pet_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Pet_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Pet_QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pet_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Province_StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street_AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZIP_CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card_Number {
            get {
                return this.Card_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Card_NumberField, value) != true)) {
                    this.Card_NumberField = value;
                    this.RaisePropertyChanged("Card_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_name {
            get {
                return this.First_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_nameField, value) != true)) {
                    this.First_nameField = value;
                    this.RaisePropertyChanged("First_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last_name {
            get {
                return this.Last_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Last_nameField, value) != true)) {
                    this.Last_nameField = value;
                    this.RaisePropertyChanged("Last_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pet_Breed {
            get {
                return this.Pet_BreedField;
            }
            set {
                if ((object.ReferenceEquals(this.Pet_BreedField, value) != true)) {
                    this.Pet_BreedField = value;
                    this.RaisePropertyChanged("Pet_Breed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pet_Id {
            get {
                return this.Pet_IdField;
            }
            set {
                if ((this.Pet_IdField.Equals(value) != true)) {
                    this.Pet_IdField = value;
                    this.RaisePropertyChanged("Pet_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pet_Name {
            get {
                return this.Pet_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Pet_NameField, value) != true)) {
                    this.Pet_NameField = value;
                    this.RaisePropertyChanged("Pet_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Pet_Price {
            get {
                return this.Pet_PriceField;
            }
            set {
                if ((this.Pet_PriceField.Equals(value) != true)) {
                    this.Pet_PriceField = value;
                    this.RaisePropertyChanged("Pet_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pet_Quantity {
            get {
                return this.Pet_QuantityField;
            }
            set {
                if ((this.Pet_QuantityField.Equals(value) != true)) {
                    this.Pet_QuantityField = value;
                    this.RaisePropertyChanged("Pet_Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pet_Type {
            get {
                return this.Pet_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Pet_TypeField, value) != true)) {
                    this.Pet_TypeField = value;
                    this.RaisePropertyChanged("Pet_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone_number {
            get {
                return this.Phone_numberField;
            }
            set {
                if ((object.ReferenceEquals(this.Phone_numberField, value) != true)) {
                    this.Phone_numberField = value;
                    this.RaisePropertyChanged("Phone_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province_State {
            get {
                return this.Province_StateField;
            }
            set {
                if ((object.ReferenceEquals(this.Province_StateField, value) != true)) {
                    this.Province_StateField = value;
                    this.RaisePropertyChanged("Province_State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street_Address {
            get {
                return this.Street_AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.Street_AddressField, value) != true)) {
                    this.Street_AddressField = value;
                    this.RaisePropertyChanged("Street_Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZIP_Code {
            get {
                return this.ZIP_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZIP_CodeField, value) != true)) {
                    this.ZIP_CodeField = value;
                    this.RaisePropertyChanged("ZIP_Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        string Register(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        string Login(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        BestFriends.ServiceReference1.TempData GetUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfPets", ReplyAction="http://tempuri.org/IService1/NumberOfPetsResponse")]
        int NumberOfPets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfPets", ReplyAction="http://tempuri.org/IService1/NumberOfPetsResponse")]
        System.Threading.Tasks.Task<int> NumberOfPetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfDogs", ReplyAction="http://tempuri.org/IService1/NumberOfDogsResponse")]
        int NumberOfDogs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfDogs", ReplyAction="http://tempuri.org/IService1/NumberOfDogsResponse")]
        System.Threading.Tasks.Task<int> NumberOfDogsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfCats", ReplyAction="http://tempuri.org/IService1/NumberOfCatsResponse")]
        int NumberOfCats();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfCats", ReplyAction="http://tempuri.org/IService1/NumberOfCatsResponse")]
        System.Threading.Tasks.Task<int> NumberOfCatsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPet", ReplyAction="http://tempuri.org/IService1/GetPetResponse")]
        BestFriends.ServiceReference1.TempData GetPet(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPet", ReplyAction="http://tempuri.org/IService1/GetPetResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetPetAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomers", ReplyAction="http://tempuri.org/IService1/GetCustomersResponse")]
        BestFriends.ServiceReference1.User[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomers", ReplyAction="http://tempuri.org/IService1/GetCustomersResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.User[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAdmins", ReplyAction="http://tempuri.org/IService1/GetAdminsResponse")]
        BestFriends.ServiceReference1.User[] GetAdmins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAdmins", ReplyAction="http://tempuri.org/IService1/GetAdminsResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.User[]> GetAdminsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetManagers", ReplyAction="http://tempuri.org/IService1/GetManagersResponse")]
        BestFriends.ServiceReference1.User[] GetManagers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetManagers", ReplyAction="http://tempuri.org/IService1/GetManagersResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.User[]> GetManagersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemovePet", ReplyAction="http://tempuri.org/IService1/RemovePetResponse")]
        string RemovePet(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemovePet", ReplyAction="http://tempuri.org/IService1/RemovePetResponse")]
        System.Threading.Tasks.Task<string> RemovePetAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDog", ReplyAction="http://tempuri.org/IService1/GetDogResponse")]
        BestFriends.ServiceReference1.TempData GetDog(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDog", ReplyAction="http://tempuri.org/IService1/GetDogResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetDogAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCat", ReplyAction="http://tempuri.org/IService1/GetCatResponse")]
        BestFriends.ServiceReference1.TempData GetCat(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCat", ReplyAction="http://tempuri.org/IService1/GetCatResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetCatAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddtoCart", ReplyAction="http://tempuri.org/IService1/AddtoCartResponse")]
        string AddtoCart(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddtoCart", ReplyAction="http://tempuri.org/IService1/AddtoCartResponse")]
        System.Threading.Tasks.Task<string> AddtoCartAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClearCart", ReplyAction="http://tempuri.org/IService1/ClearCartResponse")]
        string ClearCart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClearCart", ReplyAction="http://tempuri.org/IService1/ClearCartResponse")]
        System.Threading.Tasks.Task<string> ClearCartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfItems", ReplyAction="http://tempuri.org/IService1/NumberOfItemsResponse")]
        int NumberOfItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfItems", ReplyAction="http://tempuri.org/IService1/NumberOfItemsResponse")]
        System.Threading.Tasks.Task<int> NumberOfItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItems", ReplyAction="http://tempuri.org/IService1/GetItemsResponse")]
        BestFriends.ServiceReference1.TempData GetItems(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItems", ReplyAction="http://tempuri.org/IService1/GetItemsResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetItemsAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveFromCart", ReplyAction="http://tempuri.org/IService1/RemoveFromCartResponse")]
        string RemoveFromCart(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveFromCart", ReplyAction="http://tempuri.org/IService1/RemoveFromCartResponse")]
        System.Threading.Tasks.Task<string> RemoveFromCartAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPet", ReplyAction="http://tempuri.org/IService1/AddPetResponse")]
        string AddPet(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPet", ReplyAction="http://tempuri.org/IService1/AddPetResponse")]
        System.Threading.Tasks.Task<string> AddPetAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePet", ReplyAction="http://tempuri.org/IService1/UpdatePetResponse")]
        string UpdatePet(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePet", ReplyAction="http://tempuri.org/IService1/UpdatePetResponse")]
        System.Threading.Tasks.Task<string> UpdatePetAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditPet", ReplyAction="http://tempuri.org/IService1/EditPetResponse")]
        string EditPet(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditPet", ReplyAction="http://tempuri.org/IService1/EditPetResponse")]
        System.Threading.Tasks.Task<string> EditPetAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveUser", ReplyAction="http://tempuri.org/IService1/RemoveUserResponse")]
        string RemoveUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveUser", ReplyAction="http://tempuri.org/IService1/RemoveUserResponse")]
        System.Threading.Tasks.Task<string> RemoveUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        string EditUser(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        System.Threading.Tasks.Task<string> EditUserAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Pet", ReplyAction="http://tempuri.org/IService1/Get_PetResponse")]
        BestFriends.ServiceReference1.TempData Get_Pet(string Pet_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Pet", ReplyAction="http://tempuri.org/IService1/Get_PetResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> Get_PetAsync(string Pet_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOffer", ReplyAction="http://tempuri.org/IService1/AddOfferResponse")]
        string AddOffer(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOffer", ReplyAction="http://tempuri.org/IService1/AddOfferResponse")]
        System.Threading.Tasks.Task<string> AddOfferAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfOffers", ReplyAction="http://tempuri.org/IService1/NumberOfOffersResponse")]
        int NumberOfOffers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NumberOfOffers", ReplyAction="http://tempuri.org/IService1/NumberOfOffersResponse")]
        System.Threading.Tasks.Task<int> NumberOfOffersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveOffer", ReplyAction="http://tempuri.org/IService1/RemoveOfferResponse")]
        string RemoveOffer(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveOffer", ReplyAction="http://tempuri.org/IService1/RemoveOfferResponse")]
        System.Threading.Tasks.Task<string> RemoveOfferAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOffer", ReplyAction="http://tempuri.org/IService1/GetOfferResponse")]
        BestFriends.ServiceReference1.TempData GetOffer(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOffer", ReplyAction="http://tempuri.org/IService1/GetOfferResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetOfferAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditOffer", ReplyAction="http://tempuri.org/IService1/EditOfferResponse")]
        string EditOffer(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditOffer", ReplyAction="http://tempuri.org/IService1/EditOfferResponse")]
        System.Threading.Tasks.Task<string> EditOfferAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_Item", ReplyAction="http://tempuri.org/IService1/Add_ItemResponse")]
        string Add_Item(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_Item", ReplyAction="http://tempuri.org/IService1/Add_ItemResponse")]
        System.Threading.Tasks.Task<string> Add_ItemAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoiceUser", ReplyAction="http://tempuri.org/IService1/GetInvoiceUserResponse")]
        BestFriends.ServiceReference1.TempData GetInvoiceUser(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoiceUser", ReplyAction="http://tempuri.org/IService1/GetInvoiceUserResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetInvoiceUserAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoicePet", ReplyAction="http://tempuri.org/IService1/GetInvoicePetResponse")]
        BestFriends.ServiceReference1.TempData GetInvoicePet(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoicePet", ReplyAction="http://tempuri.org/IService1/GetInvoicePetResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetInvoicePetAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InvoiceItems", ReplyAction="http://tempuri.org/IService1/InvoiceItemsResponse")]
        int InvoiceItems(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InvoiceItems", ReplyAction="http://tempuri.org/IService1/InvoiceItemsResponse")]
        System.Threading.Tasks.Task<int> InvoiceItemsAsync(BestFriends.ServiceReference1.TempData tempdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDayInvoices", ReplyAction="http://tempuri.org/IService1/GetDayInvoicesResponse")]
        BestFriends.ServiceReference1.Invoice1[] GetDayInvoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDayInvoices", ReplyAction="http://tempuri.org/IService1/GetDayInvoicesResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.Invoice1[]> GetDayInvoicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ViewInvoiceUser", ReplyAction="http://tempuri.org/IService1/ViewInvoiceUserResponse")]
        BestFriends.ServiceReference1.TempData ViewInvoiceUser(BestFriends.ServiceReference1.TempData tempdata1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ViewInvoiceUser", ReplyAction="http://tempuri.org/IService1/ViewInvoiceUserResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> ViewInvoiceUserAsync(BestFriends.ServiceReference1.TempData tempdata1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMonthInvoices", ReplyAction="http://tempuri.org/IService1/GetMonthInvoicesResponse")]
        BestFriends.ServiceReference1.Invoice1[] GetMonthInvoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMonthInvoices", ReplyAction="http://tempuri.org/IService1/GetMonthInvoicesResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.Invoice1[]> GetMonthInvoicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetYearInvoices", ReplyAction="http://tempuri.org/IService1/GetYearInvoicesResponse")]
        BestFriends.ServiceReference1.Invoice1[] GetYearInvoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetYearInvoices", ReplyAction="http://tempuri.org/IService1/GetYearInvoicesResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.Invoice1[]> GetYearInvoicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetYearHistory", ReplyAction="http://tempuri.org/IService1/GetYearHistoryResponse")]
        BestFriends.ServiceReference1.Invoice1[] GetYearHistory(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetYearHistory", ReplyAction="http://tempuri.org/IService1/GetYearHistoryResponse")]
        System.Threading.Tasks.Task<BestFriends.ServiceReference1.Invoice1[]> GetYearHistoryAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : BestFriends.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<BestFriends.ServiceReference1.IService1>, BestFriends.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Register(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.Register(tempdata);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.RegisterAsync(tempdata);
        }
        
        public string Login(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.Login(tempdata);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.LoginAsync(tempdata);
        }
        
        public BestFriends.ServiceReference1.TempData GetUser(string email) {
            return base.Channel.GetUser(email);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetUserAsync(string email) {
            return base.Channel.GetUserAsync(email);
        }
        
        public int NumberOfPets() {
            return base.Channel.NumberOfPets();
        }
        
        public System.Threading.Tasks.Task<int> NumberOfPetsAsync() {
            return base.Channel.NumberOfPetsAsync();
        }
        
        public int NumberOfDogs() {
            return base.Channel.NumberOfDogs();
        }
        
        public System.Threading.Tasks.Task<int> NumberOfDogsAsync() {
            return base.Channel.NumberOfDogsAsync();
        }
        
        public int NumberOfCats() {
            return base.Channel.NumberOfCats();
        }
        
        public System.Threading.Tasks.Task<int> NumberOfCatsAsync() {
            return base.Channel.NumberOfCatsAsync();
        }
        
        public BestFriends.ServiceReference1.TempData GetPet(int ID) {
            return base.Channel.GetPet(ID);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetPetAsync(int ID) {
            return base.Channel.GetPetAsync(ID);
        }
        
        public BestFriends.ServiceReference1.User[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.User[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public BestFriends.ServiceReference1.User[] GetAdmins() {
            return base.Channel.GetAdmins();
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.User[]> GetAdminsAsync() {
            return base.Channel.GetAdminsAsync();
        }
        
        public BestFriends.ServiceReference1.User[] GetManagers() {
            return base.Channel.GetManagers();
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.User[]> GetManagersAsync() {
            return base.Channel.GetManagersAsync();
        }
        
        public string RemovePet(int ID) {
            return base.Channel.RemovePet(ID);
        }
        
        public System.Threading.Tasks.Task<string> RemovePetAsync(int ID) {
            return base.Channel.RemovePetAsync(ID);
        }
        
        public BestFriends.ServiceReference1.TempData GetDog(int ID) {
            return base.Channel.GetDog(ID);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetDogAsync(int ID) {
            return base.Channel.GetDogAsync(ID);
        }
        
        public BestFriends.ServiceReference1.TempData GetCat(int ID) {
            return base.Channel.GetCat(ID);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetCatAsync(int ID) {
            return base.Channel.GetCatAsync(ID);
        }
        
        public string AddtoCart(int ID) {
            return base.Channel.AddtoCart(ID);
        }
        
        public System.Threading.Tasks.Task<string> AddtoCartAsync(int ID) {
            return base.Channel.AddtoCartAsync(ID);
        }
        
        public string ClearCart() {
            return base.Channel.ClearCart();
        }
        
        public System.Threading.Tasks.Task<string> ClearCartAsync() {
            return base.Channel.ClearCartAsync();
        }
        
        public int NumberOfItems() {
            return base.Channel.NumberOfItems();
        }
        
        public System.Threading.Tasks.Task<int> NumberOfItemsAsync() {
            return base.Channel.NumberOfItemsAsync();
        }
        
        public BestFriends.ServiceReference1.TempData GetItems(int ID) {
            return base.Channel.GetItems(ID);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetItemsAsync(int ID) {
            return base.Channel.GetItemsAsync(ID);
        }
        
        public string RemoveFromCart(int ID) {
            return base.Channel.RemoveFromCart(ID);
        }
        
        public System.Threading.Tasks.Task<string> RemoveFromCartAsync(int ID) {
            return base.Channel.RemoveFromCartAsync(ID);
        }
        
        public string AddPet(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.AddPet(tempdata);
        }
        
        public System.Threading.Tasks.Task<string> AddPetAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.AddPetAsync(tempdata);
        }
        
        public string UpdatePet(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.UpdatePet(tempdata);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePetAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.UpdatePetAsync(tempdata);
        }
        
        public string EditPet(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.EditPet(tempdata);
        }
        
        public System.Threading.Tasks.Task<string> EditPetAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.EditPetAsync(tempdata);
        }
        
        public string RemoveUser(string email) {
            return base.Channel.RemoveUser(email);
        }
        
        public System.Threading.Tasks.Task<string> RemoveUserAsync(string email) {
            return base.Channel.RemoveUserAsync(email);
        }
        
        public string EditUser(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.EditUser(tempdata);
        }
        
        public System.Threading.Tasks.Task<string> EditUserAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.EditUserAsync(tempdata);
        }
        
        public BestFriends.ServiceReference1.TempData Get_Pet(string Pet_Name) {
            return base.Channel.Get_Pet(Pet_Name);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> Get_PetAsync(string Pet_Name) {
            return base.Channel.Get_PetAsync(Pet_Name);
        }
        
        public string AddOffer(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.AddOffer(tempdata);
        }
        
        public System.Threading.Tasks.Task<string> AddOfferAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.AddOfferAsync(tempdata);
        }
        
        public int NumberOfOffers() {
            return base.Channel.NumberOfOffers();
        }
        
        public System.Threading.Tasks.Task<int> NumberOfOffersAsync() {
            return base.Channel.NumberOfOffersAsync();
        }
        
        public string RemoveOffer(int ID) {
            return base.Channel.RemoveOffer(ID);
        }
        
        public System.Threading.Tasks.Task<string> RemoveOfferAsync(int ID) {
            return base.Channel.RemoveOfferAsync(ID);
        }
        
        public BestFriends.ServiceReference1.TempData GetOffer(int ID) {
            return base.Channel.GetOffer(ID);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetOfferAsync(int ID) {
            return base.Channel.GetOfferAsync(ID);
        }
        
        public string EditOffer(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.EditOffer(tempdata);
        }
        
        public System.Threading.Tasks.Task<string> EditOfferAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.EditOfferAsync(tempdata);
        }
        
        public string Add_Item(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.Add_Item(tempdata);
        }
        
        public System.Threading.Tasks.Task<string> Add_ItemAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.Add_ItemAsync(tempdata);
        }
        
        public BestFriends.ServiceReference1.TempData GetInvoiceUser(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.GetInvoiceUser(tempdata);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetInvoiceUserAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.GetInvoiceUserAsync(tempdata);
        }
        
        public BestFriends.ServiceReference1.TempData GetInvoicePet(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.GetInvoicePet(tempdata);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> GetInvoicePetAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.GetInvoicePetAsync(tempdata);
        }
        
        public int InvoiceItems(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.InvoiceItems(tempdata);
        }
        
        public System.Threading.Tasks.Task<int> InvoiceItemsAsync(BestFriends.ServiceReference1.TempData tempdata) {
            return base.Channel.InvoiceItemsAsync(tempdata);
        }
        
        public BestFriends.ServiceReference1.Invoice1[] GetDayInvoices() {
            return base.Channel.GetDayInvoices();
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.Invoice1[]> GetDayInvoicesAsync() {
            return base.Channel.GetDayInvoicesAsync();
        }
        
        public BestFriends.ServiceReference1.TempData ViewInvoiceUser(BestFriends.ServiceReference1.TempData tempdata1) {
            return base.Channel.ViewInvoiceUser(tempdata1);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.TempData> ViewInvoiceUserAsync(BestFriends.ServiceReference1.TempData tempdata1) {
            return base.Channel.ViewInvoiceUserAsync(tempdata1);
        }
        
        public BestFriends.ServiceReference1.Invoice1[] GetMonthInvoices() {
            return base.Channel.GetMonthInvoices();
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.Invoice1[]> GetMonthInvoicesAsync() {
            return base.Channel.GetMonthInvoicesAsync();
        }
        
        public BestFriends.ServiceReference1.Invoice1[] GetYearInvoices() {
            return base.Channel.GetYearInvoices();
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.Invoice1[]> GetYearInvoicesAsync() {
            return base.Channel.GetYearInvoicesAsync();
        }
        
        public BestFriends.ServiceReference1.Invoice1[] GetYearHistory(string email) {
            return base.Channel.GetYearHistory(email);
        }
        
        public System.Threading.Tasks.Task<BestFriends.ServiceReference1.Invoice1[]> GetYearHistoryAsync(string email) {
            return base.Channel.GetYearHistoryAsync(email);
        }
    }
}
